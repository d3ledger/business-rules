/*
 * Copyright D3 Ledger, Inc. All Rights Reserved.
 *  SPDX-License-Identifier: Apache-2.0
 */

buildscript {
    repositories {
        // gradle plugins repository
        gradlePluginPortal()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
    }
}


plugins {
    id 'jp.co.soramitsu.sora-plugin' version '0.1.4'
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'application'

mainClassName = "iroha.validation.Application"
shadowDistZip.classifier = 'shadow'
shadowDistTar.classifier = 'shadow'
// name of jar file that the shadowJar plugin generates
shadowJar.archiveName = 'app.jar'

// sora-plugin configs
soramitsu {
    projectGroup = 'brvs-deploy'
    docker {
        // docker tag
        tag = System.getenv("TAG")
        // jar file that is used in the generated Dockerfile
        jar = new File("build/libs/app.jar")
        // files that will be added to the docker image (optional)
        // host fs: docker image fs
        files = ['../config/context/spring-context.xml': '/config/context/spring-context.xml']
        //  optional startup arguments for java
        // java -jar ... $args
        args = "\\\"config/context/spring-context.xml\\\""
        // the rest in configured using env variables
    }
}

dependencies {

    compile project(':brvs-rules')
    // Notary
    compile('com.github.d3ledger.notary:notary-commons:9f811288a43c17dc01a1a6604080b45ad6be22f9') {
        exclude group:  'com.github.hyperledger.iroha-java', module: 'client'
    }
    // Chain adapter
    compile('com.github.d3ledger.chain-adapter:chain-adapter-client:e27b242699c776a92797efa1522f59ab20b737d8') {
        exclude group:  'com.github.hyperledger.iroha-java', module: 'client'
    }
    // MongoDB
    compile('org.mongodb:mongodb-driver-sync:3.10.1')
    // REST
    compile('org.glassfish.jersey.containers:jersey-container-grizzly2-http:2.28')
    compile('org.glassfish.jersey.inject:jersey-hk2:2.28')
    compile('org.glassfish.jersey.media:jersey-media-json-jackson:2.28')
    // Logging redirection
    compile('org.slf4j:jul-to-slf4j:1.8.0-beta2')
    // Json utils
    compile('com.google.protobuf:protobuf-java-util:3.5.1')
    // Groovy
    compile('org.codehaus.groovy:groovy:3.0.0-alpha-4')

    // unit tests
    testCompile('org.junit.jupiter:junit-jupiter-api:5.4.0')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.4.0')
    // Test containers iroha
    testCompile('com.github.hyperledger.iroha-java:testcontainers:de13f51295')
    // rest testing
    testCompile('org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:2.28')
    testCompile('org.glassfish.jersey.test-framework:jersey-test-framework-core:2.28')
    // Mockito
    testCompile('org.mockito:mockito-core:2.24.0')
}

test {
    useJUnitPlatform {}
}

jar {
    manifest {
        attributes(
                'Main-Class': 'iroha.validation.Application'
        )
    }
}

shadowJar {
    mergeServiceFiles('META-INF/spring.*')
}
